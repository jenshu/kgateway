imagePullSecrets: []
nameOverride: ""
fullnameOverride: ""

serviceAccount:
  # Specifies whether a service account should be created
  create: true
  # Annotations to add to the service account
  annotations: {}
  # The name of the service account to use.
  # If not set and create is true, a name is generated using the fullname template
  name: ""

podAnnotations: {}

podSecurityContext: {}
  # fsGroup: 2000

securityContext: {}
  # capabilities:
  #   drop:
  #   - ALL
  # readOnlyRootFilesystem: true
  # runAsNonRoot: true
  # runAsUser: 1000

resources: {}
  # We usually recommend not to specify default resources and to leave this as a conscious
  # choice for the user. This also increases chances charts run on environments with little
  # resources, such as Minikube. If you do want to specify resources, uncomment the following
  # lines, adjust them as necessary, and remove the curly braces after 'resources:'.
  # limits:
  #   cpu: 100m
  #   memory: 128Mi
  # requests:
  #   cpu: 100m
  #   memory: 128Mi

autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
  # targetMemoryUtilizationPercentage: 80

nodeSelector: {}

tolerations: []

affinity: {}

controller:
  # TODO(tim): configurable probes?
  replicaCount: 1
  logLevel: info
  image:
    registry: ""
    repository: kgateway
    pullPolicy: IfNotPresent
    tag: ""
  service:
    type: ClusterIP
    ports:
      grpc: 9977

# GatewayClass configuration
gatewayClass:
  enabled: true
  name: "kgateway"
  description: "kgateway controller"
  controllerName: "kgateway.dev/kgateway"
  labels: {}
  annotations: {}
  service:
    type: LoadBalancer # Default, can be overridden
  parametersRef:
    enabled: true
    name: "kgateway"
    group: "gateway.kgateway.dev"
    kind: "GatewayParameters"
    podTemplate:
      extraLabels: {}
      extraAnnotations: {}

# WaypointClass configuration
waypointClass:
  enabled: true
  name: "kgateway-waypoint"
  description: "kgateway waypoint controller"
  controllerName: "kgateway.dev/kgateway"
  labels: {}
  annotations:
    ambient.istio.io/waypoint-inbound-binding: PROXY/15088
  service:
    # Waypoints handle east-west traffic.
    type: ClusterIP
  parametersRef:
    enabled: true
    name: "kgateway-waypoint"
    group: "gateway.kgateway.dev"
    kind: "GatewayParameters"
    podTemplate:
      extraLabels:
        istio.io/dataplane-mode: ambient
      extraAnnotations: {}

# Gateway proxy configuration
gateway:
  envoyContainer:
    image:
      registry: ""
      repository: envoy-wrapper
      pullPolicy: IfNotPresent
      tag: ""
    securityContext:
      allowPrivilegeEscalation: false
      readOnlyRootFilesystem: true
      runAsNonRoot: true
      runAsUser: 10101
      capabilities:
        drop:
          - ALL
        add:
          - NET_BIND_SERVICE
  # If proxyDeployment or proxyDeployment.replicas are null, a default of 1 will be
  # imposed by the template.
  proxyDeployment:
    replicas: 1
  sdsContainer:
    image:
      registry: ""
      repository: sds
      pullPolicy: IfNotPresent
    logLevel: info
  istio:
    istioProxyContainer:
      image:
        repository: proxyv2
        registry: docker.io/istio
        tag: 1.22.0
      logLevel: warning
      istioDiscoveryAddress: istiod.istio-system.svc:15012
      istioMetaMeshId: cluster.local
      istioMetaClusterId: Kubernetes
  aiExtension:
    enabled: false
    image:
      repository: kgateway-ai-extension
  stats:
    enabled: true
    routePrefixRewrite: "/stats/prometheus"
    enableStatsRoute: true
    statsRoutePrefixRewrite: "/stats"

image:
  registry: cr.kgateway.dev/kgateway-dev
  tag: ""
  pullPolicy: IfNotPresent

inferenceExtension:
  enabled: false
